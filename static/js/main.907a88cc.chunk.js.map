{"version":3,"sources":["reportWebVitals.js","store/initialState.tsx","firebase.config.js","store/userInfo/userInfo.actions.tsx","store/userInfo/userInfo.reducer.tsx","constants/appConsts.ts","store/news/news.action.tsx","store/news/news.reducer.tsx","store/roles/roles.actions.tsx","store/roles/roles.reducer.tsx","store/rootReducer.tsx","store/store.tsx","constants/mocks/newsTableConfigConsts.tsx","components/newsPage/newsTable/newsTable.labels.tsx","helpers/helpers.tsx","components/typography/typography.styles.tsx","components/typography/typography.tsx","pipes/transferBoolean.pipe.tsx","components/customTable/customTable.labels.tsx","helpers/moment/moment.js","components/customTable/customTable.styles.ts","styles/button.styles.tsx","components/customTooltip/customTooltip.tsx","components/customTable/customTable.tsx","components/newsPage/newsTable/newsTable.tsx","components/newsPage/newsPage.tsx","components/header/header.labels.tsx","components/header/header.styles.tsx","components/header/header.tsx","components/dashboard/dashboard.tsx","constants/validationConst.tsx","styles/selectMenu.styles.tsx","styles/validation.styles.tsx","components/usersInfo/userInfoFormDialog/userInfoFormDialog.styles.tsx","components/usersInfo/userInfoFormDialog/userInfoFormDialog.tsx","components/usersInfo/userInfoHeader/userInfoHeader.label.tsx","components/usersInfo/userInfoHeader/userInfoHeader.styles.tsx","components/usersInfo/userInfoHeader/userInfoHeader.tsx","components/editBlock/editBlock.labels.tsx","components/editBlock/editBlock.tsx","components/usersInfo/userInfoList/userInfoList.labels.tsx","components/usersInfo/userInfoList/userInfoList.styles.tsx","components/usersInfo/userInfoHeader/multiGrid/multiGrid.config.tsx","components/usersInfo/userInfoList/userInfoList.tsx","components/usersInfo/usersInfo.tsx","components/routing/routing.tsx","components/spinner/spinner.styles.tsx","components/spinner/spinner.tsx","App.tsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","init","appFirebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dataBase","getFirestore","userRef","collection","getUsersInfo","createAsyncThunk","a","getDocs","items","response","docs","map","item","data","id","changeUsersInfo","userInfo","userDoc","doc","updateDoc","deleteUserInfo","deleteDoc","addUserInfo","addDoc","userInfoSlice","createSlice","name","reducers","extraReducers","pending","state","isUsersLoading","isFetching","fulfilled","action","usersList","payload","rejected","isUsersChanging","isUserInfoAdding","isUserDeleting","default_time_format","default_regexp","RegExp","userInfoInitial","surname","role","readingLabelsStatus","truthy","falsy","getNews","fetch","json","newsSlice","isNewsLoading","newsList","getRoles","rolesList","rolesSlice","isRolesLoading","rootReducer","combineReducers","users","userInfoReducer","news","newsReducer","roles","rolesReducer","store","configureStore","reducer","columnConfig","field","headerName","minWidth","maxWidth","newsTableLabels","isPresent","obj","undefined","styledTypography","makeStyles","textWrapper","fontFamily","join","fontWeight","fontSize","lineHeight","letterSpacing","Typography","props","text","typographyStyle","className","TransferBooleanPipe","value","transferLabels","customTableLabels","Moment","format","date","moment","Number","toString","styledCustomTable","customTable","borderRadius","boxShadow","customTableWrapper","height","width","position","zIndex","background","backgroundFirsts","top","backgroundHeader","textAlign","left","wordBreak","overflow","boxSizing","customTableWrapperImage","maxHeight","contentCell","textOverflow","whiteSpace","pagination","float","styledButton","button","padding","marginLeft","color","likeButton","backgroundColor","CustomTooltip","styled","Tooltip","classes","popper","tooltipClasses","tooltip","TablePaginationActions","theme","useTheme","count","page","rowsPerPage","onPageChange","paginationButtonStyle","Box","sx","flexShrink","ml","IconButton","onClick","event","disabled","direction","Math","ceil","CustomTable","rows","columns","useState","setPage","setRowsPerPage","customTableStyled","Paper","TableContainer","component","Table","stickyHeader","TableHead","TableRow","column","index","TableCell","TableBody","slice","row","border","style","scope","language","align","fingerprint","keywords","originId","origin","htmlUrl","streamId","title","author","crawled","published","summary","content","alternate","Link","target","href","type","alt","src","visual","url","canonicalUrl","unread","TablePagination","rowsPerPageOptions","label","colSpan","length","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","NewsTable","dispatch","useDispatch","useEffect","useSelector","isNewsListExist","_","NewsPage","headerLabels","styledHeader","header","display","alignItems","margin","headerItem","textDecoration","borderBottom","headerItemActive","Header","setActive","isActive","clsx","headerStyled","to","Dashboard","validationErrorShort","validationErrorLong","validationErrorRequired","validationErrorInvalidFormat","styledSelectMenu","selectMenu","marginBottom","selectMenuLabel","styledValidation","errorMessage","styledUserInfoFormDialog","dialogWrapper","flexDirection","justifyContent","dialogTitle","inputWrapper","dialogHead","validationSchema","Yup","shape","min","max","matches","required","UserInfoFormDialog","isOpen","onSubmit","onClose","initValue","options","React","setRole","selectList","setSelectList","formikRef","useRef","buttonStyled","userInfoFormDialogStyled","selectMenuStyled","errorMessageStyled","createSelectOptions","optionList","handleClose","isValid","errors","controlName","getIn","sendForm","formValues","current","resetForm","Dialog","open","DialogTitle","palette","grey","innerRef","initialValues","enableReinitialize","values","touched","setFieldValue","FormControl","InputLabel","Select","labelId","defaultValue","onChange","e","option","MenuItem","TextField","size","variant","error","Button","userInfoHeaderLabel","styledUserInfoHeader","tableHeader","UserInfoHeader","userInfoHeaderStyled","statusDialog","setStatusDialog","setDialogTitle","flag","editBlockLabels","EditBlock","primaryEvent","secondaryEvent","editButtonStyle","userInfoListLabels","styledUserInfoList","topLeftGrid","borderRight","topRightGrid","bottomLeftGrid","bottomRightGrid","borderWidth","userInfoElement","transition","flexGrow","userInfoContentWrapper","MultiGridConfig","handleCheckbox","headercolumns","displayName","userInfoList","reduce","Object","assign","checkboxStatus","setCheckboxStatus","renderHeaderColumns","columnIndex","currentColumn","cellRenderer","key","rowIndex","rowsList","Checkbox","checked","userId","prevState","handleChange","classNameTopLeftGrid","classNameTopRightGrid","classNameBottomLeftGrid","classNameBottomRightGrid","defaultGridStyle","fixedColumnCount","fixedRowCount","columnCount","columnWidth","rowCount","rowHeight","UserInfoList","editableUser","setEditableUser","userInfoListStyled","isExistUserInfoList","List","userInfoItem","ListItem","ListItemText","console","log","UsersInfo","localStorage","setItem","JSON","stringify","Routing","basename","path","element","styledSpinner","spinner","right","bottom","Spinner","spinnerStyled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.907a88cc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  init: true,\r\n};\r\n\r\nexport default initialState;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {getFirestore} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCZPH0d_ZK0HC6htJauwG-PIpcZyVSLCXo\",\r\n  authDomain: \"newsbase-react.firebaseapp.com\",\r\n  projectId: \"newsbase-react\",\r\n  storageBucket: \"newsbase-react.appspot.com\",\r\n  messagingSenderId: \"536710551117\",\r\n  appId: \"1:536710551117:web:581226c9f482dfd2c8ee04\",\r\n  measurementId: \"G-NH1KX5W2TS\"\r\n};\r\n\r\nconst appFirebase = initializeApp(firebaseConfig);\r\n\r\nexport const dataBase = getFirestore(appFirebase);","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { UsersInfoInterface } from \"../../interfaces/usersInfoInterface/usersInfoInterface\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  addDoc,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport { dataBase } from \"../../firebase.config\";\r\n\r\nconst userRef = collection(dataBase, \"users\");\r\n\r\nexport const getUsersInfo: any = createAsyncThunk(\r\n  \"fetchGetUsersInfo\",\r\n  async () => {\r\n    const items = await getDocs(userRef);\r\n    const response = items.docs.map((item) => {\r\n      return {\r\n        ...item.data(),\r\n        id: item.id,\r\n      };\r\n    });\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const changeUsersInfo: any = createAsyncThunk(\r\n  \"fetchChangeUsersInfo\",\r\n  async (userInfo: any) => {\r\n    const userDoc = doc(dataBase, \"users\", userInfo.id);\r\n    await updateDoc(userDoc, userInfo);\r\n    return;\r\n  }\r\n);\r\n\r\nexport const deleteUserInfo: any = createAsyncThunk(\r\n  \"fetchDeleteUserInfo\",\r\n  async (id: string) => {\r\n    const userDoc = doc(dataBase, \"users\", id);\r\n    await deleteDoc(userDoc);\r\n    return;\r\n  }\r\n);\r\n\r\nexport const addUserInfo: any = createAsyncThunk(\r\n  \"fetchAddUserInfo\",\r\n  async (userInfo: UsersInfoInterface) => {\r\n    await addDoc(userRef, userInfo);\r\n    return;\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport initialState from \"../initialState\";\nimport {\n  addUserInfo,\n  changeUsersInfo,\n  deleteUserInfo,\n  getUsersInfo,\n} from \"./userInfo.actions\";\n\nexport const reducerName = \"userInfoReducer\";\n\nconst userInfoSlice = createSlice({\n  name: reducerName,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getUsersInfo.pending]: (state) => {\n      return {\n        ...state,\n        isUsersLoading: true,\n        isFetching: true,\n      };\n    },\n    [getUsersInfo.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        usersList: action.payload,\n        isUsersLoading: false,\n        isFetching: false,\n      };\n    },\n    [getUsersInfo.rejected]: (state) => {\n      return {\n        ...state,\n        isUsersLoading: false,\n        isFetching: false,\n      };\n    },\n    [changeUsersInfo.pending]: (state) => {\n      return {\n        ...state,\n        isUsersChanging: true,\n        isFetching: true,\n      };\n    },\n    [changeUsersInfo.fulfilled]: (state) => {\n      return {\n        ...state,\n        isUsersChanging: false,\n        isFetching: false,\n      };\n    },\n    [changeUsersInfo.rejected]: (state) => {\n      return {\n        ...state,\n        isUsersChanging: false,\n        isFetching: false,\n      };\n    },\n    [addUserInfo.pending]: (state) => {\n      return {\n        ...state,\n        isUserInfoAdding: true,\n        isFetching: true,\n      };\n    },\n    [addUserInfo.fulfilled]: (state) => {\n      return {\n        ...state,\n        isUserInfoAdding: false,\n        isFetching: false,\n      };\n    },\n    [addUserInfo.rejected]: (state) => {\n      return {\n        ...state,\n        isUserInfoAdding: false,\n        isFetching: false,\n      };\n    },\n    [deleteUserInfo.pending]: (state) => {\n      return {\n        ...state,\n        isUserDeleting: true,\n        isFetching: true,\n      };\n    },\n    [deleteUserInfo.fulfilled]: (state) => {\n      return {\n        ...state,\n        isUserDeleting: false,\n        isFetching: false,\n      };\n    },\n    [deleteUserInfo.rejected]: (state) => {\n      return {\n        ...state,\n        isUserDeleting: false,\n        isFetching: false,\n      };\n    },\n  },\n});\n\nexport default userInfoSlice.reducer;\n","export const default_api_url =\n  \"https://cloud.feedly.com/v3/streams/contents?streamId=feed/https://www.fca.org.uk/news/rss.xml&unreadOnly=False\";\n\nexport const default_time_format = \"DD.MM.YYYY HH-MM-SS\";\nexport const default_regexp = new RegExp(\"[a-zA-Z]{1,9}\");\nexport const userInfoInitial = { name: \"\", surname: \"\", role: \"\" };\nexport const readingLabelsStatus = {\n  truthy: \"Read\",\n  falsy: \"Unread\",\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { default_api_url } from \"../../constants/appConsts\";\r\n\r\nexport const getNews: any = createAsyncThunk(\"fetchGetNews\", async () => {\r\n  const response = await fetch(default_api_url);\r\n  return response.json();\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport initialState from \"../initialState\";\nimport { getNews } from \"./news.action\";\n\nconst reducerName = \"newsReducer\";\n\nconst newsSlice = createSlice({\n  name: reducerName,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getNews.pending]: (state) => {\n      return {\n        ...state,\n        isNewsLoading: true,\n        isFetching: true,\n      };\n    },\n    [getNews.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        newsList: action.payload.items,\n        isNewsLoading: false,\n        isFetching: false,\n      };\n    },\n    [getNews.rejected]: (state) => {\n      return {\n        ...state,\n        isNewsLoading: false,\n        isFetching: false,\n      };\n    },\n  },\n});\n\nexport default newsSlice.reducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { dataBase } from \"../../firebase.config\";\r\n\r\nconst userRef = collection(dataBase, \"roles\");\r\n\r\nexport const getRoles: any = createAsyncThunk(\r\n  \"admin/fetchGetNewsFast\",\r\n  async () => {\r\n    const items = await getDocs(userRef);\r\n    const response = items.docs.map((item) => {\r\n      return {\r\n        ...item.data(),\r\n      };\r\n    })[0]?.rolesList;\r\n    return response;\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport initialState from \"../initialState\";\nimport { getRoles } from \"./roles.actions\";\n\nconst reducerName = \"rolesReducer\";\n\nconst rolesSlice = createSlice({\n  name: reducerName,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getRoles.pending]: (state) => {\n      return {\n        ...state,\n        isRolesLoading: true,\n        isFetching: true,\n      };\n    },\n    [getRoles.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        rolesList: action.payload,\n        isRolesLoading: false,\n        isFetching: false,\n      };\n    },\n    [getRoles.rejected]: (state) => {\n      return {\n        ...state,\n        isRolesLoading: false,\n        isFetching: false,\n      };\n    },\n  },\n});\n\nexport default rolesSlice.reducer;\n","import { combineReducers } from \"redux\";\r\nimport userInfoReducer from \"./userInfo/userInfo.reducer\";\r\nimport newsReducer from \"./news/news.reducer\";\r\nimport rolesReducer from \"./roles/roles.reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  users: userInfoReducer,\r\n  news: newsReducer,\r\n  roles: rolesReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import { NewsColumnConfigInterface } from \"../../interfaces/newsInterfaces/newsColumnConfigInterface\";\n\nexport const columnConfig: NewsColumnConfigInterface[] = [\n  { field: \"lang\", headerName: \"Language\", minWidth: 200 },\n  { field: \"fieldId\", headerName: \"ID\", minWidth: 200 },\n  { field: \"fingerprint\", headerName: \"Attribute\", minWidth: 200 },\n  { field: \"keywords\", headerName: \"Main keywords\", minWidth: 200 },\n  { field: \"originId\", headerName: \"News source id\", minWidth: 200 },\n  { field: \"origin\", headerName: \"News source\", minWidth: 200 },\n  { field: \"title\", headerName: \"Title\", minWidth: 200 },\n  { field: \"author\", headerName: \"Author\", minWidth: 200 },\n  { field: \"crawled\", headerName: \"Crawled date\", minWidth: 200 },\n  { field: \"published\", headerName: \"Published date\", minWidth: 200 },\n  { field: \"summary\", headerName: \"Description\", maxWidth: 800 },\n  { field: \"alternate\", headerName: \"More details\", minWidth: 200 },\n  { field: \"visual\", headerName: \"News image\", minWidth: 200 },\n  { field: \"canonicalUrl\", headerName: \"News link\", minWidth: 200 },\n  { field: \"unread\", headerName: \"Read status\", minWidth: 200 },\n];\n","export const newsTableLabels = {\r\n  emptyList: \"No news\",\r\n};\r\n","export const isPresent = (obj: any): boolean => {\r\n  return obj !== undefined && obj !== null && obj !== \"undefined\";\r\n};\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst styledTypography = makeStyles({\r\n  textWrapper: {\r\n    fontFamily: [\"Roboto\",\"Helvetica\",\"Arial\", 'sans-serif'].join(','),\r\n    fontWeight: 400,\r\n    fontSize: 14,\r\n    lineHeight: 1.5,\r\n    letterSpacing: '0.00938em'\r\n  }\r\n});\r\n\r\nexport default styledTypography;","import React from \"react\";\r\nimport styledTypography from \"./typography.styles\";\r\n\r\ninterface TypographyProps {\r\n  text: string | number | string[] | undefined | null;\r\n}\r\n\r\nconst Typography = (props: TypographyProps) => {\r\n  const { text } = props;\r\n  const typographyStyle = styledTypography();\r\n  return <p className={typographyStyle.textWrapper}>{text}</p>;\r\n};\r\n\r\nexport default Typography;\r\n","import React from \"react\";\r\nimport { isPresent } from \"../helpers/helpers\";\r\nimport Typography from \"../components/typography/typography\";\r\n\r\ninterface TransferLabelsInterface {\r\n  truthy: string;\r\n  falsy: string;\r\n}\r\n\r\nexport const TransferBooleanPipe = (\r\n  value: boolean,\r\n  transferLabels: TransferLabelsInterface\r\n) => {\r\n  if (!isPresent(value)) {\r\n    return;\r\n  }\r\n  return (\r\n    <div>\r\n      {value ? (\r\n        <Typography text={transferLabels.truthy} />\r\n      ) : (\r\n        <Typography text={transferLabels.falsy} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const customTableLabels = {\r\n  prev: \"Previous\",\r\n  next: \"Next\",\r\n};\r\n","import moment from \"moment/moment\";\n\nexport const Moment = (format, date) => {\n  if (!date || !format) {\n    return null;\n  }\n  return moment(Number(date)).format(format.toString());\n};\n","import { makeStyles } from \"@mui/styles\";\n\ninterface styledCustomTableInterface {\n  backgroundHeader: string;\n  backgroundFirsts: string;\n}\n\nconst styledCustomTable = makeStyles({\n  customTable: {\n    \"&.MuiPaper-root\": {\n      borderRadius: 0,\n      boxShadow: `none`,\n    },\n  },\n  customTableWrapper: {\n    height: `calc(100vh - 72px - 70px);`,\n    width: `100%`,\n    \"& tbody\": {\n      \"& td, & th\": {\n        \"&:first-child, &:nth-child(2)\": {\n          position: \"sticky\",\n          zIndex: 2,\n          background: (props: styledCustomTableInterface) => {\n            return props.backgroundFirsts;\n          },\n        },\n      },\n    },\n    \"& th\": {\n      position: `sticky`,\n      top: 0,\n      zIndex: 3,\n      background: (props: styledCustomTableInterface) => {\n        return props.backgroundHeader;\n      },\n      textAlign: `right`,\n      \"&:first-child\": {\n        left: 0,\n      },\n      \"&:nth-child(2)\": {\n        left: `150px`,\n      },\n      \"&:first-child, &:nth-child(2)\": {\n        zIndex: 4,\n        \"& p\": {\n          width: `inherit`,\n        },\n      },\n    },\n    \"& td\": {\n      \"& p\": {\n        wordBreak: `break-word`,\n      },\n    },\n    \"& th, & td\": {\n      overflow: `hidden`,\n      minWidth: `150px`,\n      width: `800px`,\n      \"&:first-child, &:nth-child(2)\": {\n        width: `150px`,\n        maxWidth: `150px`,\n        boxSizing: `border-box`,\n        textAlign: `left`,\n      },\n    },\n  },\n  customTableWrapperImage: {\n    maxWidth: `80px`,\n    maxHeight: `80px`,\n  },\n  contentCell: {\n    \"&  p\": {\n      maxWidth: `300px`,\n      overflow: `hidden`,\n      textOverflow: `ellipsis`,\n      whiteSpace: `nowrap`,\n    },\n  },\n  pagination: {\n    float: `left`,\n    height: \"70px\",\n  },\n});\n\nexport default styledCustomTable;\n","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst styledButton = makeStyles({\r\n  button: {\r\n    textAlign: 'center',\r\n    boxShadow: 'none',\r\n    padding: `12px 24px`,\r\n    borderRadius: `16px`,\r\n    height: `48px`,\r\n    '& + button': {\r\n      marginLeft: `12px`\r\n    },\r\n    '&.MuiButton-contained': {\r\n      background: 'darkblue',\r\n      color: 'white',\r\n      borderRadius: `16px`,\r\n    },\r\n    '&.MuiButton-outlined': {\r\n      color: 'darkblue'\r\n    }\r\n  },\r\n  likeButton: {\r\n    '&.MuiIconButton-root': {\r\n        '&:hover': {\r\n        color: 'darkblue',\r\n        backgroundColor: 'inherit'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default styledButton;","import React from \"react\";\nimport { styled } from \"@mui/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\n\nconst CustomTooltip = styled(({ className, ...props }: any) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: `100%`,\n    backgroundColor: `black`,\n  },\n});\n\nexport default CustomTooltip;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport {\n  Box,\n  IconButton,\n  Link,\n  TablePagination,\n  useTheme,\n} from \"@mui/material\";\nimport {\n  Alternate,\n  NewsItem,\n} from \"../../interfaces/getNewsResponse/getNewsResponse\";\nimport { TransferBooleanPipe } from \"../../pipes/transferBoolean.pipe\";\nimport { useState } from \"react\";\nimport { TablePaginationInterface } from \"../../interfaces/tablePaginationInterface/tablePaginationInterface\";\nimport {\n  default_time_format,\n  readingLabelsStatus,\n} from \"../../constants/appConsts\";\nimport { NewsColumnConfigInterface } from \"../../interfaces/newsInterfaces/newsColumnConfigInterface\";\nimport { NewsTablePropsInterface } from \"../../interfaces/newsInterfaces/newsTablePropsInterface\";\nimport { customTableLabels } from \"./customTable.labels\";\nimport Typography from \"../typography/typography\";\nimport { Moment } from \"../../helpers/moment/moment\";\nimport styledCustomTable from \"./customTable.styles\";\nimport styledButton from \"../../styles/button.styles\";\nimport CustomTooltip from \"../customTooltip/customTooltip\";\n\nexport const TablePaginationActions = (props: TablePaginationInterface) => {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n  const paginationButtonStyle = styledButton();\n\n  const handleBackButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page + 1);\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        className={paginationButtonStyle.likeButton}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <Typography text={customTableLabels.next} />\n        ) : (\n          <Typography text={customTableLabels.prev} />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        className={paginationButtonStyle.likeButton}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <Typography text={customTableLabels.prev} />\n        ) : (\n          <Typography text={customTableLabels.next} />\n        )}\n      </IconButton>\n    </Box>\n  );\n};\n\nexport const CustomTable = (props: NewsTablePropsInterface) => {\n  const { rows, columns } = props;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const customTableStyled = styledCustomTable({\n    backgroundHeader: `#0D5CFF`,\n    backgroundFirsts: `lightgrey`,\n  });\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Paper className={customTableStyled.customTable}>\n      <TableContainer\n        className={customTableStyled.customTableWrapper}\n        component={Paper}\n      >\n        <Table\n          sx={{ minWidth: 650, maxHeight: 500 }}\n          aria-label=\"simple table\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {columns.map(\n                (column: NewsColumnConfigInterface, index: number) => (\n                  <TableCell key={index} sx={{ maxWidth: column.maxWidth }}>\n                    <Typography text={column.headerName} />\n                  </TableCell>\n                )\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row: NewsItem, index: number) => (\n                <TableRow\n                  key={index}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell\n                    style={{\n                      left: 0,\n                    }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    <Typography text={row.language} />\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    style={{\n                      left: 150,\n                    }}\n                  >\n                    <Typography text={row.id} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.fingerprint} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.keywords} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.originId} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.origin.htmlUrl} />\n                    <Typography text={row.origin.streamId} />\n                    <Typography text={row.origin.title} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.title} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.author} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      text={Moment(default_time_format, row.crawled)}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      text={Moment(default_time_format, row.published)}\n                    />\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={customTableStyled.contentCell}\n                  >\n                    {!!row.summary.content ? (\n                      <CustomTooltip title={row.summary.content}>\n                        <div>\n                          <Typography text={row.summary.content} />\n                        </div>\n                      </CustomTooltip>\n                    ) : (\n                      \"\"\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {row.alternate.map((item: Alternate) => (\n                      <Link\n                        key={item.href}\n                        target=\"_blank\"\n                        href={item.href}\n                        type={item.type}\n                      >\n                        Link\n                      </Link>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <img\n                      className={customTableStyled.customTableWrapperImage}\n                      alt=\"News view\"\n                      src={row.visual.url}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography text={row.canonicalUrl} />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {TransferBooleanPipe(row.unread, readingLabelsStatus)}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TablePagination\n              className={customTableStyled.pagination}\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  \"aria-label\": \"rows per page\",\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { columnConfig } from \"../../../constants/mocks/newsTableConfigConsts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreStateInterface } from \"../../../interfaces/storeStateInterface/storeStateInterface\";\nimport * as _ from \"lodash\";\nimport { getNews } from \"../../../store/news/news.action\";\nimport { newsTableLabels } from \"./newsTable.labels\";\nimport { CustomTable } from \"../../customTable/customTable\";\nimport Typography from \"../../typography/typography\";\n\nconst NewsTable = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getNews()(dispatch);\n  }, [dispatch]);\n\n  const newsList = useSelector(\n    (state: StoreStateInterface) => state?.news?.newsList ?? []\n  );\n  const isNewsListExist = !_.isEmpty(_.compact(newsList));\n\n  return (\n    <div>\n      {isNewsListExist ? (\n        <CustomTable rows={newsList} columns={columnConfig} />\n      ) : (\n        <Typography text={newsTableLabels.emptyList} />\n      )}\n    </div>\n  );\n};\n\nexport default NewsTable;\n","import React from \"react\";\r\nimport NewsTable from \"./newsTable/newsTable\";\r\nconst NewsPage = () => {\r\n  return (\r\n    <div>\r\n      <NewsTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","export const headerLabels = {\r\n  news: \"News\",\r\n  profile: \"Profile\",\r\n};\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\ninterface styledHeaderProps {\r\n  color: string;\r\n}\r\n\r\nconst styledHeader = makeStyles({\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    margin: `24px 0`,\r\n  },\r\n  headerItem: {\r\n    margin: `0 24px`,\r\n    color: (props: styledHeaderProps) => {return props?.color},\r\n    textDecoration: 'none',\r\n    borderBottom: '1px solid transparent',\r\n  },\r\n  headerItemActive: {\r\n     borderBottom: '1px solid black'\r\n  }\r\n});\r\n\r\nexport default styledHeader;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { headerLabels } from \"./header.labels\";\r\nimport styledHeader from \"./header.styles\";\r\nimport clsx from 'clsx';\r\n\r\nconst Header = () => {\r\n  const setActive = ({ isActive }: any) =>\r\n    isActive ? (clsx(headerStyled.headerItem, {[headerStyled.headerItemActive]: true})) : (headerStyled.headerItem);\r\n   const headerStyled = styledHeader({color: 'black'});\r\n\r\n  return (\r\n    <div className={headerStyled.header}>\r\n      <NavLink to=\"/\" className={setActive}>\r\n        {headerLabels.news}\r\n      </NavLink>\r\n      <NavLink to=\"/users-info\" className={setActive}>\r\n        {headerLabels.profile}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport NewsPage from \"../newsPage/newsPage\";\r\nimport Header from \"../header/header\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NewsPage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export const validationErrorShort = \"Too Short!\";\r\nexport const validationErrorLong = \"Too Long!\";\r\nexport const validationErrorRequired = \"Required\";\r\nexport const validationErrorInvalidFormat = \"Invalid format\";\r\n","import { makeStyles } from \"@mui/styles\";\n\nconst styledSelectMenu = makeStyles({\n  selectMenu: {\n    height: `48px`,\n    marginBottom: `24px`,\n  },\n  selectMenuLabel: {\n    \"&.MuiInputLabel-root\": {\n      lineHeight: `inherit`,\n    },\n  },\n});\n\nexport default styledSelectMenu;\n","import {makeStyles} from \"@mui/styles\";\r\n\r\ninterface styledValidationProps {\r\n  color: string;\r\n}\r\n\r\nconst styledValidation = makeStyles({\r\n  errorMessage: {\r\n    color: (props: styledValidationProps) => {\r\n      return props.color;},\r\n    marginBottom: `24px`,\r\n    textAlign: `left`,\r\n  }\r\n});\r\n\r\nexport default styledValidation;","import { makeStyles } from \"@mui/styles\";\n\nconst styledUserInfoFormDialog = makeStyles({\n  dialogWrapper: {\n    \"& .MuiDialog-paper\": {\n      background: `white`,\n      width: `100%`,\n      padding: `20px 30px`,\n      \"& form\": {\n        display: `flex`,\n        flexDirection: `column`,\n        justifyContent: `space-between`,\n        height: `100%`,\n        textAlign: `center`,\n      },\n    },\n  },\n  dialogTitle: {\n    \"&.MuiTypography-h6\": {\n      padding: 0,\n      \"& p\": {\n        fontSize: \"20px\",\n        padding: 0,\n        margin: 0,\n      },\n    },\n  },\n  inputWrapper: {\n    width: `100%`,\n    marginBottom: `24px !important`,\n  },\n  dialogHead: {\n    display: `flex`,\n    flexDirection: `row`,\n    justifyContent: `space-between`,\n    alignItems: `center`,\n    marginBottom: `20px`,\n    \"& button\": {\n      height: \"40px\",\n      width: \"40px\",\n    },\n  },\n});\n\nexport default styledUserInfoFormDialog;\n","import React, { MutableRefObject, useEffect, useRef } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { ErrorMessage, Field, Form, Formik, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as _ from \"lodash\";\nimport {\n  validationErrorInvalidFormat,\n  validationErrorLong,\n  validationErrorRequired,\n  validationErrorShort,\n} from \"../../../constants/validationConst\";\nimport { default_regexp } from \"../../../constants/appConsts\";\nimport Typography from \"../../typography/typography\";\nimport styledButton from \"../../../styles/button.styles\";\nimport styledSelectMenu from \"../../../styles/selectMenu.styles\";\nimport styledValidation from \"../../../styles/validation.styles\";\nimport styledUserInfoFormDialog from \"./userInfoFormDialog.styles\";\nimport { isPresent } from \"../../../helpers/helpers\";\n\ninterface FormDialogPropsInterface {\n  isOpen?: boolean;\n  onSubmit: any;\n  onClose: any;\n  initValue?: any;\n  dialogTitle?: string;\n  options?: any;\n}\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(1, validationErrorShort)\n    .max(50, validationErrorLong)\n    .matches(default_regexp, validationErrorInvalidFormat)\n    .required(validationErrorRequired),\n  surname: Yup.string()\n    .min(1, validationErrorShort)\n    .max(50, validationErrorLong)\n    .matches(default_regexp, validationErrorInvalidFormat)\n    .required(validationErrorRequired),\n});\n\nexport const UserInfoFormDialog = (props: FormDialogPropsInterface) => {\n  const { isOpen, onSubmit, onClose, initValue, dialogTitle, options } = props;\n  const [role, setRole] = React.useState(\"\");\n  const [selectList, setSelectList] = React.useState();\n  const formikRef: MutableRefObject<any> = useRef();\n  const buttonStyled = styledButton();\n  const userInfoFormDialogStyled = styledUserInfoFormDialog();\n  const selectMenuStyled = styledSelectMenu();\n  const errorMessageStyled = styledValidation({ color: `#AF1D1DFF` });\n\n  useEffect(() => {\n    if (!isPresent(initValue) || !isPresent(options)) {\n      return;\n    }\n\n    createSelectOptions(options);\n    setRole(initValue?.role);\n  }, [initValue, options]);\n\n  const createSelectOptions = (value: any) => {\n    const optionList =\n      value &&\n      value.map((item: any) => {\n        return {\n          name: item,\n          value: item,\n        };\n      });\n    setSelectList(optionList);\n  };\n\n  const handleClose = () => {\n    onClose(false);\n  };\n\n  const isValid = (errors: any, controlName: string): boolean => {\n    return !!getIn(errors, controlName);\n  };\n\n  const sendForm = (formValues: any) => {\n    onSubmit(formValues);\n    formikRef.current.resetForm();\n    handleClose();\n  };\n\n  return (\n    <Dialog\n      className={userInfoFormDialogStyled.dialogWrapper}\n      open={isOpen || false}\n    >\n      <div className={userInfoFormDialogStyled.dialogHead}>\n        <DialogTitle className={userInfoFormDialogStyled.dialogTitle}>\n          <Typography text={dialogTitle} />\n        </DialogTitle>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </div>\n      <Formik\n        innerRef={formikRef}\n        initialValues={initValue}\n        validationSchema={validationSchema}\n        enableReinitialize={true}\n        onSubmit={(values) => {\n          sendForm(values);\n        }}\n      >\n        {({ values, errors, touched, setFieldValue }) => (\n          <Form>\n            <FormControl>\n              <InputLabel\n                id=\"selectMenuRoleLabel\"\n                className={selectMenuStyled.selectMenuLabel}\n              >\n                Role\n              </InputLabel>\n              <Select\n                labelId=\"selectMenuRoleLabel\"\n                defaultValue={role}\n                value={role}\n                name=\"role\"\n                label=\"Role\"\n                className={selectMenuStyled.selectMenu}\n                onChange={(e) => {\n                  setRole(e.target.value);\n                  setFieldValue(e.target.name, e.target.value);\n                }}\n              >\n                (\n                {_.map(selectList, (option: any, index: number) => (\n                  <MenuItem key={index} value={option.value}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </Select>\n              <ErrorMessage\n                className={errorMessageStyled.errorMessage}\n                name=\"role\"\n                component=\"div\"\n              />\n            </FormControl>\n            <FormControl>\n              <Field type=\"text\" name=\"name\">\n                {({ field }: any) => (\n                  <div>\n                    <TextField\n                      id=\"outlined-size-small\"\n                      className={userInfoFormDialogStyled.inputWrapper}\n                      label=\"Name\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={values && values.name}\n                      error={touched.name && isValid(errors, \"name\")}\n                      onChange={(event) =>\n                        setFieldValue(\"name\", event.target.value)\n                      }\n                      {...field}\n                    />\n                  </div>\n                )}\n              </Field>\n              <ErrorMessage\n                className={errorMessageStyled.errorMessage}\n                name=\"name\"\n                component=\"div\"\n              />\n            </FormControl>\n            <FormControl>\n              <Field type=\"text\" name=\"surname\">\n                {({ field }: any) => (\n                  <div>\n                    <TextField\n                      id=\"outlined-size-small\"\n                      className={userInfoFormDialogStyled.inputWrapper}\n                      label=\"Surname\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={values && values.surname}\n                      error={touched.surname && isValid(errors, \"surname\")}\n                      onChange={(event) =>\n                        setFieldValue(\"surname\", event.target.value)\n                      }\n                      {...field}\n                    />\n                  </div>\n                )}\n              </Field>\n              <ErrorMessage\n                className={errorMessageStyled.errorMessage}\n                name=\"surname\"\n                component=\"div\"\n              />\n            </FormControl>\n            <Button\n              className={buttonStyled.button}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n};\n","export const userInfoHeaderLabel = {\n  addButton: \"Add\",\n  dialogStatusAdd: \"Adding mode\",\n};\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst styledUserInfoHeader = makeStyles({\r\n  tableHeader: {\r\n    margin: `16px 0`,\r\n  },\r\n});\r\n\r\nexport default styledUserInfoHeader;\r\n","import React, { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { UserInfoFormDialog } from \"../userInfoFormDialog/userInfoFormDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UsersInfoInterface } from \"../../../interfaces/usersInfoInterface/usersInfoInterface\";\nimport { userInfoInitial } from \"../../../constants/appConsts\";\nimport {\n  addUserInfo,\n  getUsersInfo,\n} from \"../../../store/userInfo/userInfo.actions\";\nimport { userInfoHeaderLabel } from \"./userInfoHeader.label\";\nimport styledButton from \"../../../styles/button.styles\";\nimport styledUserInfoHeader from \"./userInfoHeader.styles\";\nimport { getRoles } from \"../../../store/roles/roles.actions\";\nimport { StoreStateInterface } from \"../../../interfaces/storeStateInterface/storeStateInterface\";\n\nexport const UserInfoHeader = () => {\n  const dispatch = useDispatch();\n  const buttonStyled = styledButton();\n  const userInfoHeaderStyled = styledUserInfoHeader();\n  const [statusDialog, setStatusDialog] = useState(false);\n  const [dialogTitle, setDialogTitle] = useState(\"\");\n  const handleOpenDialog = () => {\n    setStatusDialog(true);\n    setDialogTitle(userInfoHeaderLabel.dialogStatusAdd);\n    getRoles()(dispatch);\n  };\n\n  const rolesList = useSelector(\n    (state: StoreStateInterface) => state?.roles?.rolesList ?? []\n  );\n\n  const handleSubmit = (formValues: UsersInfoInterface) => {\n    addUserInfo(formValues)(dispatch);\n    getUsersInfo()(dispatch);\n  };\n\n  const handleClose = (flag: boolean) => {\n    setStatusDialog(flag);\n  };\n\n  return (\n    <div className={userInfoHeaderStyled.tableHeader}>\n      <Button\n        variant=\"contained\"\n        className={buttonStyled.button}\n        onClick={handleOpenDialog}\n      >\n        {userInfoHeaderLabel.addButton}\n      </Button>\n      {!!userInfoInitial ? (\n        <UserInfoFormDialog\n          isOpen={statusDialog}\n          onSubmit={handleSubmit}\n          onClose={handleClose}\n          options={rolesList}\n          initValue={userInfoInitial}\n          dialogTitle={dialogTitle}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n","export const editBlockLabels = {\r\n  edit: \"Edit\",\r\n  delete: \"Delete\",\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { editBlockLabels } from \"./editBlock.labels\";\r\nimport styledButton from \"../../styles/button.styles\";\r\n\r\ninterface EditBlockPropsInterface {\r\n  primaryEvent?: any;\r\n  secondaryEvent?: any;\r\n}\r\n\r\nexport const EditBlock = (props: EditBlockPropsInterface) => {\r\n  const { primaryEvent, secondaryEvent } = props;\r\n  const editButtonStyle = styledButton();\r\n  const primaryClick = () => {\r\n    primaryEvent();\r\n  };\r\n  const secondaryClick = () => {\r\n    secondaryEvent();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {primaryEvent ? (\r\n        <Button\r\n          className={editButtonStyle.button}\r\n          variant=\"contained\"\r\n          onClick={primaryClick}\r\n        >\r\n          {editBlockLabels.edit}\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {secondaryEvent ? (\r\n        <Button\r\n          className={editButtonStyle.button}\r\n          variant=\"outlined\"\r\n          onClick={secondaryClick}\r\n        >\r\n          {editBlockLabels.delete}\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const userInfoListLabels = {\n  emptyList: \"No users\",\n  dialogStatusEdit: \"Editing mode\",\n  name: \"Name: \",\n  surname: \"Surname: \",\n  role: \"Role: \",\n  fullName: \"Full name: \",\n};\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst styledUserInfoList = makeStyles({\r\n  topLeftGrid: {\r\n    background: \"grey\",\r\n    borderBottom: \"2px solid #aaa\",\r\n    borderRight: \"2px solid #aaa\",\r\n  },\r\n  topRightGrid: {\r\n    background: \"grey\",\r\n    borderBottom: \"2px solid #aaa\",\r\n  },\r\n  bottomLeftGrid: {\r\n    background: \"grey\",\r\n    borderRight: \"2px solid #aaa\",\r\n  },\r\n  bottomRightGrid: {\r\n    background: \"lightgrey\",\r\n    \"& > div > div\": {\r\n      border: \"1px solid black\",\r\n    },\r\n    \"&::-webkit-scrollbar\": {\r\n      width: `6px`,\r\n      height: `6px`,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      borderWidth: 0,\r\n      borderRadius: `5px`,\r\n      backgroundColor: `gray`,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb:hover\": {\r\n      backgroundColor: `darkgray`,\r\n    },\r\n\r\n    \"&::-webkit-scrollbar-track\": {\r\n      borderWidth: 0,\r\n    },\r\n  },\r\n  userInfoElement: {\r\n    \"&.MuiListItem-root\": {\r\n      display: `flex`,\r\n      flexDirection: `column`,\r\n      alignItems: `flex-start`,\r\n      marginBottom: `40px`,\r\n      backgroundColor: `white`,\r\n      transition: `box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms`,\r\n      border: `1px solid black`,\r\n      borderRadius: `12px`,\r\n      boxShadow: ` rgb(0 0 0 / 20%) 0px 4px 2px -3px, rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 2px 4px 0px`,\r\n      padding: `16px`,\r\n      margin: `auto`,\r\n      maxWidth: `75%`,\r\n      minWidth: \"500px\",\r\n      flexGrow: `1`,\r\n    },\r\n  },\r\n  userInfoContentWrapper: {\r\n    \"& span\": {\r\n      display: `flex`,\r\n      flexDirection: `row`,\r\n      alignItems: `center`,\r\n    },\r\n  },\r\n});\r\n\r\nexport default styledUserInfoList;\r\n","import { isPresent } from \"../../../../helpers/helpers\";\r\nimport * as _ from \"lodash\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { StoreStateInterface } from \"../../../../interfaces/storeStateInterface/storeStateInterface\";\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\nimport { MultiGrid, AutoSizer } from \"react-virtualized\";\r\nimport { Checkbox } from \"@mui/material\";\r\n\r\ninterface MultiGridConfigInterface {\r\n  editUserItem?: any;\r\n  deleteUserItem?: any;\r\n  styled?: any;\r\n  handleCheckbox?: any;\r\n}\r\n\r\nconst MultiGridConfig = (props: MultiGridConfigInterface) => {\r\n  const { styled, handleCheckbox } = props;\r\n  const headercolumns = [\r\n    { name: \"check\", displayName: \"check\", width: 100 },\r\n    { name: \"name\", displayName: \"Name\", width: 400 },\r\n    { name: \"surname\", displayName: \"Surname\", width: 480 },\r\n    { name: \"role\", displayName: \"Role\", width: 420 },\r\n    { name: \"id\", displayName: \"id\", width: 420 },\r\n    { name: \"action\", displayName: \"Action\", width: 400 },\r\n  ];\r\n  const rowHeight = 40;\r\n  const userInfoList = useSelector(\r\n    (state: StoreStateInterface) => state?.users?.usersList\r\n  );\r\n\r\n  const initialState = userInfoList.reduce(\r\n    (state: any, current: { id: any }) =>\r\n      Object.assign(state, { [current.id]: false }),\r\n    {}\r\n  );\r\n  const [checkboxStatus, setCheckboxStatus] = useState(initialState);\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    userId: number\r\n  ) => {\r\n    const { checked } = event.target;\r\n    handleCheckbox(userId);\r\n    setCheckboxStatus((prevState: any) => ({\r\n      ...prevState,\r\n      [userId]: checked,\r\n    }));\r\n  };\r\n\r\n  const rowCountRenderer = () => {\r\n    if (!isPresent(userInfoList)) {\r\n      return 0;\r\n    }\r\n    return userInfoList.length;\r\n  };\r\n\r\n  const renderHeaderColumns = (columnIndex: any) => {\r\n    const currentColumn = headercolumns[columnIndex];\r\n    return <div key={currentColumn.name}>{currentColumn.displayName}</div>;\r\n  };\r\n\r\n  const cellRenderer = ({ columnIndex, key, rowIndex, style }: any) => {\r\n    if (!isPresent(userInfoList)) {\r\n      return;\r\n    }\r\n\r\n    if (rowIndex === 0) {\r\n      return (\r\n        <div key={key} style={style}>\r\n          {renderHeaderColumns(columnIndex)}\r\n        </div>\r\n      );\r\n    } else {\r\n      const rowsList = _.map(userInfoList, (item) => {\r\n        return _.values(item);\r\n      });\r\n\r\n      if (\r\n        !isPresent(rowsList) ||\r\n        !isPresent(rowsList[rowIndex]) ||\r\n        !isPresent(rowsList[rowIndex][columnIndex])\r\n      ) {\r\n        return \"\";\r\n      }\r\n\r\n      if (columnIndex === 0) {\r\n        return (\r\n          <div key={key} style={style}>\r\n            <Checkbox\r\n              checked={checkboxStatus[userInfoList[rowIndex].id]}\r\n              onChange={(event) =>\r\n                handleChange(event, userInfoList[rowIndex].id)\r\n              }\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div key={key} style={style}>\r\n          {rowsList ? rowsList[rowIndex][columnIndex] : undefined}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const heightRenderer = () => {\r\n    if (!isPresent(userInfoList)) {\r\n      return 0;\r\n    }\r\n    return userInfoList.length * rowHeight;\r\n  };\r\n\r\n  return (\r\n    <AutoSizer>\r\n      {({ width }: any) => (\r\n        <MultiGrid\r\n          cellRenderer={cellRenderer}\r\n          classNameTopLeftGrid={styled.topLeftGrid}\r\n          classNameTopRightGrid={styled.topRightGrid}\r\n          classNameBottomLeftGrid={styled.bottomLeftGrid}\r\n          classNameBottomRightGrid={styled.bottomRightGrid}\r\n          className={styled.defaultGridStyle}\r\n          fixedColumnCount={1}\r\n          fixedRowCount={1}\r\n          height={heightRenderer()}\r\n          width={width}\r\n          columnCount={headercolumns.length}\r\n          columnWidth={({ index }: any) => headercolumns[index].width}\r\n          rowCount={rowCountRenderer()}\r\n          rowHeight={rowHeight}\r\n        />\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n};\r\n\r\nexport default MultiGridConfig;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@mui/material\";\r\nimport * as _ from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreStateInterface } from \"../../../interfaces/storeStateInterface/storeStateInterface\";\r\nimport { EditBlock } from \"../../editBlock/editBlock\";\r\nimport { UserInfoFormDialog } from \"../userInfoFormDialog/userInfoFormDialog\";\r\nimport { UsersInfoInterface } from \"../../../interfaces/usersInfoInterface/usersInfoInterface\";\r\nimport { userInfoInitial } from \"../../../constants/appConsts\";\r\nimport {\r\n  changeUsersInfo,\r\n  deleteUserInfo,\r\n  getUsersInfo,\r\n} from \"../../../store/userInfo/userInfo.actions\";\r\nimport { userInfoListLabels } from \"./userInfoList.labels\";\r\nimport Typography from \"../../typography/typography\";\r\nimport { getRoles } from \"../../../store/roles/roles.actions\";\r\nimport styledUserInfoList from \"./userInfoList.styles\";\r\nimport MultiGridConfig from \"../userInfoHeader/multiGrid/multiGrid.config\";\r\n\r\nexport const UserInfoList = () => {\r\n  const dispatch = useDispatch();\r\n  const [statusDialog, setStatusDialog] = useState(false);\r\n  const [editableUser, setEditableUser] = useState(userInfoInitial);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const userInfoListStyled = styledUserInfoList();\r\n\r\n  useEffect(() => {\r\n    getUsersInfo()(dispatch);\r\n  }, [dispatch]);\r\n  const userInfoList = useSelector(\r\n    (state: StoreStateInterface) => state?.users?.usersList\r\n  );\r\n\r\n  const isExistUserInfoList = _.size(userInfoList) > 0;\r\n\r\n  const handleEdit = (formValues: UsersInfoInterface) => {\r\n    changeUsersInfo(formValues)(dispatch);\r\n    getUsersInfo()(dispatch);\r\n  };\r\n\r\n  const handleClose = (flag: boolean) => {\r\n    setStatusDialog(flag);\r\n  };\r\n\r\n  const handleChange = (value: any) => {\r\n    console.log(\"value\", value);\r\n  };\r\n\r\n  const editUserItem = (id: string) => {\r\n    setEditableUser(_.find(userInfoList, { id: id }) as UsersInfoInterface);\r\n    setStatusDialog(true);\r\n    setDialogTitle(userInfoListLabels.dialogStatusEdit);\r\n    getRoles()(dispatch);\r\n  };\r\n\r\n  const rolesList = useSelector(\r\n    (state: StoreStateInterface) => state?.roles?.rolesList\r\n  );\r\n\r\n  const deleteUserItem = (id: string): void => {\r\n    deleteUserInfo(id)(dispatch);\r\n    getUsersInfo()(dispatch);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isExistUserInfoList ? (\r\n        <div>\r\n          <List>\r\n            {_.map(\r\n              userInfoList,\r\n              (userInfoItem: UsersInfoInterface, index: number) => (\r\n                <ListItem\r\n                  key={index}\r\n                  className={userInfoListStyled.userInfoElement}\r\n                >\r\n                  {userInfoItem.name || userInfoItem.surname ? (\r\n                    <ListItemText\r\n                      className={userInfoListStyled.userInfoContentWrapper}\r\n                    >\r\n                      <Typography text={userInfoListLabels.fullName} />\r\n                      {userInfoItem.name} {userInfoItem.surname}\r\n                    </ListItemText>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {userInfoItem.role ? (\r\n                    <ListItemText\r\n                      className={userInfoListStyled.userInfoContentWrapper}\r\n                    >\r\n                      <Typography text={userInfoListLabels.role} />\r\n                      {userInfoItem.role}\r\n                    </ListItemText>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <EditBlock\r\n                    primaryEvent={() => {\r\n                      editUserItem(userInfoItem.id);\r\n                    }}\r\n                    secondaryEvent={() => {\r\n                      deleteUserItem(userInfoItem.id);\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              )\r\n            )}\r\n          </List>\r\n          {!!userInfoList ? (\r\n            <MultiGridConfig\r\n              styled={userInfoListStyled}\r\n              handleCheckbox={handleChange}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Typography text={userInfoListLabels.emptyList} />\r\n      )}\r\n      {!!editableUser ? (\r\n        <UserInfoFormDialog\r\n          isOpen={statusDialog}\r\n          onSubmit={handleEdit}\r\n          onClose={handleClose}\r\n          initValue={editableUser}\r\n          options={rolesList}\r\n          dialogTitle={dialogTitle}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { UserInfoHeader } from \"./userInfoHeader/userInfoHeader\";\r\nimport { UserInfoList } from \"./userInfoList/userInfoList\";\r\nimport Header from \"../header/header\";\r\n\r\nexport const UsersInfo = () => {\r\n  localStorage.setItem(\r\n    \"userInfoList\",\r\n    JSON.stringify([\r\n      {\r\n        id: 1,\r\n        name: \"Adam\",\r\n        surname: \"Qwerty\",\r\n        role: \"user\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Tomas\",\r\n        surname: \"ASDFG\",\r\n        role: \"admin\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Nick\",\r\n        surname: \"Cvnnvb\",\r\n        role: \"user\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Jack\",\r\n        surname: \"Qwerty\",\r\n        role: \"editor\",\r\n      },\r\n    ])\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <UserInfoHeader />\r\n      <UserInfoList />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Dashboard from \"../dashboard/dashboard\";\r\nimport { UsersInfo } from \"../usersInfo/usersInfo\";\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter basename=\"/\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Dashboard />} />\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          <Route path=\"/users-info\" element={<UsersInfo />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import { makeStyles } from \"@mui/styles\";\n\nconst styledSpinner = makeStyles({\n  spinner: {\n    position: `fixed`,\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    display: `flex`,\n    alignItems: `center`,\n    justifyContent: `center`,\n    background: `rgba(0,0,0,0.5)`,\n    zIndex: 999,\n  },\n});\n\nexport default styledSpinner;\n","import React from \"react\";\nimport { PulseLoader } from \"react-spinners\";\nimport styledSpinner from \"./spinner.styles\";\n\nconst Spinner = () => {\n  const spinnerStyled = styledSpinner();\n  return (\n    <div className={spinnerStyled.spinner}>\n      <PulseLoader size={15} margin={2} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import \"./App.css\";\nimport Routing from \"./components/routing/routing\";\nimport \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { StoreStateInterface } from \"./interfaces/storeStateInterface/storeStateInterface\";\nimport * as _ from \"lodash\";\nimport Spinner from \"./components/spinner/spinner\";\n\nconst App = () => {\n  const rolesList = useSelector((state: StoreStateInterface) => state ?? []);\n\n  const isFetching = _.find(rolesList, (item) => {\n    return !!item?.isFetching;\n  });\n\n  return (\n    <div className=\"App\">\n      <Routing />\n\n      {isFetching ? <Spinner /> : \"\"}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App></App>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}