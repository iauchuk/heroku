{"version":3,"sources":["constants/mocks/newsTableConfigConsts.tsx","constants/appConsts.ts","store/news/news.action.tsx","components/newsPage/newsTable/newsTable.labels.tsx","helpers/helpers.tsx","components/typography/typography.styles.tsx","components/typography/typography.tsx","pipes/transferBoolean.pipe.tsx","components/customTable/customTable.labels.tsx","helpers/moment/moment.js","components/customTable/customTable.styles.ts","components/customTable/customTable.tsx","components/newsPage/newsTable/newsTable.tsx","components/newsPage/newsPage.tsx","components/header/header.labels.tsx","components/header/header.styles.tsx","components/header/header.tsx","components/dashboard/dashboard.tsx","constants/validationConst.tsx","styles/button.styles.tsx","styles/selectMenu.styles.tsx","styles/validation.styles.tsx","components/usersInfo/userInfoFormDialog/userInfoFormDialog.styles.tsx","components/usersInfo/userInfoFormDialog/userInfoFormDialog.tsx","firebase.config.js","store/userInfo/userInfo.actions.tsx","components/usersInfo/userInfoHeader/userInfoHeader.label.tsx","components/usersInfo/userInfoHeader/userInfoHeader.styles.tsx","store/roles/roles.actions.tsx","components/usersInfo/userInfoHeader/userInfoHeader.tsx","components/editBlock/editBlock.labels.tsx","components/editBlock/editBlock.tsx","components/usersInfo/userInfoList/userInfoList.labels.tsx","components/usersInfo/userInfoList/userInfoList.tsx","components/usersInfo/usersInfo.tsx","components/routing/routing.tsx","App.js","reportWebVitals.js","store/initialState.tsx","store/userInfo/userInfo.reducer.tsx","store/news/news.reducer.tsx","store/roles/roles.reducer.tsx","store/rootReducer.tsx","store/store.tsx","index.js"],"names":["columnConfig","field","headerName","minWidth","maxWidth","default_time_format","default_regexp","RegExp","userInfoInitial","name","surname","role","readingLabelsStatus","truthy","falsy","getNews","createAsyncThunk","a","fetch","response","json","newsTableLabels","isPresent","obj","undefined","styledTypography","makeStyles","textWrapper","fontFamily","join","fontWeight","fontSize","lineHeight","letterSpacing","Typography","props","text","typographyStyle","className","TransferBooleanPipe","value","transferLabels","customTableLabels","Moment","format","date","useMemo","moment","Number","toString","styledCustomTable","customTableWrapper","height","width","position","zIndex","background","backgroundFirsts","top","backgroundHeader","textAlign","left","wordBreak","overflow","boxSizing","customTableWrapperImage","maxHeight","contentCell","textOverflow","whiteSpace","pagination","float","TablePaginationActions","theme","useTheme","count","page","rowsPerPage","onPageChange","Box","sx","flexShrink","ml","IconButton","onClick","event","disabled","direction","Math","ceil","CustomTable","rows","columns","useState","setPage","setRowsPerPage","customTableStyled","Paper","TableContainer","component","Table","stickyHeader","TableHead","TableRow","map","column","index","TableCell","TableBody","slice","row","border","style","scope","language","align","id","fingerprint","keywords","originId","origin","htmlUrl","streamId","title","author","crawled","published","summary","content","alternate","item","Link","target","href","type","alt","src","visual","url","canonicalUrl","unread","TablePagination","rowsPerPageOptions","label","colSpan","length","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","NewsTable","dispatch","useDispatch","useEffect","newsList","useSelector","state","news","isNewsListExist","_","NewsPage","headerLabels","styledHeader","header","display","alignItems","margin","headerItem","color","textDecoration","borderBottom","headerItemActive","Header","setActive","isActive","clsx","headerStyled","to","Dashboard","validationErrorRequired","styledButton","button","boxShadow","padding","borderRadius","marginLeft","styledSelectMenu","selectMenu","marginBottom","styledValidation","errorMessage","styledUserInfoFormDialog","dialogWrapper","flexDirection","justifyContent","inputWrapper","validationSchema","Yup","shape","matches","required","min","max","UserInfoFormDialog","isOpen","onSubmit","onClose","initValue","dialogTitle","options","React","setRole","selectList","setSelectList","formikRef","useRef","buttonStyled","userInfoFormDialogStyled","selectMenuStyled","errorMessageStyled","createSelectOptions","optionList","handleClose","isValid","errors","controlName","getIn","sendForm","formValues","current","resetForm","Dialog","open","DialogTitle","innerRef","initialValues","enableReinitialize","values","touched","setFieldValue","Select","defaultValue","onChange","e","option","MenuItem","TextField","size","variant","error","Button","appFirebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dataBase","getFirestore","userRef","collection","getUsersInfo","getDocs","items","docs","data","changeUsersInfo","userInfo","userDoc","doc","updateDoc","deleteUserInfo","deleteDoc","addUserInfo","addDoc","userInfoHeaderLabel","styledUserInfoHeader","tableHeader","getRoles","rolesList","UserInfoHeader","userInfoHeaderStyled","statusDialog","setStatusDialog","setDialogTitle","roles","flag","editBlockLabels","EditBlock","primaryEvent","secondaryEvent","editButtonStyle","userInfoListLabels","UserInfoList","editableUser","setEditableUser","userInfoList","users","usersList","isExistUserInfoList","List","userInfoItem","ListItem","ListItemText","UsersInfo","localStorage","setItem","JSON","stringify","Routing","path","element","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","init","userInfoSlice","createSlice","reducers","extraReducers","pending","isUsersLoading","fulfilled","action","payload","rejected","isUsersChanging","isUserInfoAdding","isUserDeleting","newsSlice","isNewsLoading","rolesSlice","isRolesLoading","rootReducer","combineReducers","userInfoReducer","newsReducer","rolesReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ace613b1.chunk.js","sourcesContent":["import { NewsColumnConfigInterface } from \"../../interfaces/newsInterfaces/newsColumnConfigInterface\";\r\n\r\nexport const columnConfig: NewsColumnConfigInterface[] = [\r\n  { field: \"lang\", headerName: \"language\", minWidth: 200 },\r\n  { field: \"fieldId\", headerName: \"id\", minWidth: 200 },\r\n  { field: \"fingerprint\", headerName: \"fingerprint\", minWidth: 200 },\r\n  { field: \"keywords\", headerName: \"keywords\", minWidth: 200 },\r\n  { field: \"originId\", headerName: \"originId\", minWidth: 200 },\r\n  { field: \"origin\", headerName: \"origin\", minWidth: 200 },\r\n  { field: \"title\", headerName: \"title\", minWidth: 200 },\r\n  { field: \"author\", headerName: \"author\", minWidth: 200 },\r\n  { field: \"crawled\", headerName: \"crawled\", minWidth: 200 },\r\n  { field: \"published\", headerName: \"published\", minWidth: 200 },\r\n  { field: \"summary\", headerName: \"summary\", maxWidth: 800 },\r\n  { field: \"alternate\", headerName: \"alternate\", minWidth: 200 },\r\n  { field: \"visual\", headerName: \"visual\", minWidth: 200 },\r\n  { field: \"canonicalUrl\", headerName: \"canonicalUrl\", minWidth: 200 },\r\n  { field: \"unread\", headerName: \"unread\", minWidth: 200 },\r\n];\r\n","export const default_api_url =\r\n  \"https://cloud.feedly.com/v3/streams/contents?streamId=feed/https://www.fca.org.uk/news/rss.xml&unreadOnly=False\";\r\n\r\nexport const default_time_format = \"DD.MM.YYYY HH-MM-SS\";\r\nexport const default_regexp = new RegExp(\"[a-zA-Z]{1,9}\");\r\nexport const userInfoInitial = { name: \"\", surname: \"\", role: \"\" };\r\nexport const readingLabelsStatus = {\r\n  truthy: \"Прочитано\",\r\n  falsy: \"Не прочитано\",\r\n};\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { default_api_url } from \"../../constants/appConsts\";\r\n\r\nexport const getNews: any = createAsyncThunk(\"fetchGetNews\", async () => {\r\n  const response = await fetch(default_api_url);\r\n  return response.json();\r\n});\r\n","export const newsTableLabels = {\r\n  emptyList: \"No news\",\r\n};\r\n","export const isPresent = (obj: any): boolean => {\r\n  return obj !== undefined && obj !== null && obj !== \"undefined\";\r\n};\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst styledTypography = makeStyles({\r\n  textWrapper: {\r\n    fontFamily: [\"Roboto\",\"Helvetica\",\"Arial\", 'sans-serif'].join(','),\r\n    fontWeight: 400,\r\n    fontSize: 14,\r\n    lineHeight: 1.5,\r\n    letterSpacing: '0.00938em'\r\n  }\r\n});\r\n\r\nexport default styledTypography;","import React from \"react\";\r\nimport styledTypography from \"./typography.styles\";\r\n\r\ninterface TypographyProps {\r\n  text: string | number | string[] | undefined | null;\r\n}\r\n\r\nconst Typography = (props: TypographyProps) => {\r\n  const { text } = props;\r\n  const typographyStyle = styledTypography();\r\n  return <p className={typographyStyle.textWrapper}>{text}</p>;\r\n};\r\n\r\nexport default Typography;\r\n","import React from \"react\";\r\nimport { isPresent } from \"../helpers/helpers\";\r\nimport Typography from \"../components/typography/typography\";\r\n\r\ninterface TransferLabelsInterface {\r\n  truthy: string;\r\n  falsy: string;\r\n}\r\n\r\nexport const TransferBooleanPipe = (\r\n  value: boolean,\r\n  transferLabels: TransferLabelsInterface\r\n) => {\r\n  if (!isPresent(value)) {\r\n    return;\r\n  }\r\n  return (\r\n    <div>\r\n      {value ? (\r\n        <Typography text={transferLabels.truthy} />\r\n      ) : (\r\n        <Typography text={transferLabels.falsy} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const customTableLabels = {\r\n  prev: \"Previous\",\r\n  next: \"Next\",\r\n};\r\n","import moment from \"moment/moment\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport const Moment = (format, date) => {\r\n  if (!date || !format) {return null}\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const transformedDate = useMemo(() => moment(Number(date)).format(format.toString()), [format, date]);\r\n  return transformedDate;\r\n};","import {makeStyles} from \"@mui/styles\";\r\n\r\ninterface styledCustomTableInterface {\r\n  backgroundHeader: string,\r\n  backgroundFirsts: string,\r\n}\r\n\r\nconst styledCustomTable = makeStyles({\r\n  customTableWrapper: {\r\n    height: `520px`,\r\n    width: `100%`,\r\n    '& tbody': {\r\n      '& td, & th': {\r\n        '&:first-child, &:nth-child(2)': {\r\n        position: 'sticky',\r\n        zIndex: 2,\r\n        background: (props: styledCustomTableInterface) => {return props.backgroundFirsts}\r\n      },\r\n      }\r\n    },\r\n    '& th': {\r\n      position: `sticky`,\r\n      top: 0,\r\n      zIndex: 3,\r\n      background: (props: styledCustomTableInterface) => {return props.backgroundHeader},\r\n      textAlign: `right`,\r\n      '&:first-child': {\r\n        left: 0\r\n      },\r\n      '&:nth-child(2)': {\r\n        left: `150px`,\r\n      },\r\n      '&:first-child, &:nth-child(2)': {\r\n        zIndex: 4,\r\n        '& p': {\r\n          width: `inherit`,\r\n        }\r\n      }\r\n    },\r\n    '& td': {\r\n      '& p': {\r\n        wordBreak: `break-word`,\r\n      }\r\n    },\r\n    '& th, & td': {\r\n      overflow: `hidden`,\r\n      minWidth: `150px`,\r\n      width: `800px`,\r\n      '&:first-child, &:nth-child(2)': {\r\n        width: `150px`,\r\n        maxWidth: `150px`,\r\n        boxSizing: `border-box`,\r\n        textAlign: `left`,\r\n      }\r\n    }\r\n  },\r\n  customTableWrapperImage: {\r\n    maxWidth: `80px`,\r\n    maxHeight: `80px`,\r\n  },\r\n  contentCell: {\r\n    '&  p': {\r\n      maxWidth: `300px`,\r\n      overflow: `hidden`,\r\n      textOverflow: `ellipsis`,\r\n      whiteSpace: `nowrap`,\r\n    }\r\n  },\r\n  pagination: {\r\n    float: `left`,\r\n  }\r\n});\r\n\r\nexport default styledCustomTable;","import * as React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Link,\r\n  TablePagination,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  Alternate,\r\n  NewsItem,\r\n} from \"../../interfaces/getNewsResponse/getNewsResponse\";\r\nimport { TransferBooleanPipe } from \"../../pipes/transferBoolean.pipe\";\r\nimport { useState } from \"react\";\r\nimport { TablePaginationInterface } from \"../../interfaces/tablePaginationInterface/tablePaginationInterface\";\r\nimport {\r\n  default_time_format,\r\n  readingLabelsStatus,\r\n} from \"../../constants/appConsts\";\r\nimport { NewsColumnConfigInterface } from \"../../interfaces/newsInterfaces/newsColumnConfigInterface\";\r\nimport { NewsTablePropsInterface } from \"../../interfaces/newsInterfaces/newsTablePropsInterface\";\r\nimport { customTableLabels } from \"./customTable.labels\";\r\nimport Typography from \"../typography/typography\";\r\nimport {Moment} from \"../../helpers/moment/moment\";\r\nimport styledCustomTable from \"./customTable.styles\";\r\n\r\nexport const TablePaginationActions = (props: TablePaginationInterface) => {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleBackButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <Typography text={customTableLabels.next} />\r\n        ) : (\r\n          <Typography text={customTableLabels.prev} />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <Typography text={customTableLabels.prev} />\r\n        ) : (\r\n          <Typography text={customTableLabels.next} />\r\n        )}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const CustomTable = (props: NewsTablePropsInterface) => {\r\n  const { rows, columns } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const customTableStyled = styledCustomTable({backgroundHeader: `#0D5CFF`, backgroundFirsts: `lightgrey`});\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer className={customTableStyled.customTableWrapper} component={Paper}>\r\n        <Table\r\n          sx={{ minWidth: 650, maxHeight: 500 }}\r\n          aria-label=\"simple table\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(\r\n                (column: NewsColumnConfigInterface, index: number) => (\r\n                  <TableCell key={index} sx={{ maxWidth: column.maxWidth }}>\r\n                    <Typography text={column.headerName} />\r\n                  </TableCell>\r\n                )\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows\r\n            ).map((row: NewsItem, index: number) => (\r\n              <TableRow\r\n                key={index}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell\r\n                  style={{\r\n                    left: 0,\r\n                  }}\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                >\r\n                  <Typography text={row.language} />\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  style={{\r\n                    left: 99,\r\n                  }}\r\n                >\r\n                  <Typography text={row.id} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.fingerprint} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.keywords} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.originId} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.origin.htmlUrl} />\r\n                  <Typography text={row.origin.streamId} />\r\n                  <Typography text={row.origin.title} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.title} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.author} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={Moment(default_time_format, row.crawled)}/>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={Moment(default_time_format, row.published)}/>\r\n                </TableCell>\r\n                <TableCell align=\"right\" className={customTableStyled.contentCell}>\r\n                  <Typography text={row.summary.content} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {row.alternate.map((item: Alternate) => (\r\n                    <Link\r\n                      key={item.href}\r\n                      target=\"_blank\"\r\n                      href={item.href}\r\n                      type={item.type}\r\n                    >\r\n                      Link\r\n                    </Link>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <img\r\n                    className={customTableStyled.customTableWrapperImage}\r\n                    alt=\"News view\"\r\n                    src={row.visual.url}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography text={row.canonicalUrl} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {TransferBooleanPipe(row.unread, readingLabelsStatus)}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TablePagination\r\n              className={customTableStyled.pagination}\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  \"aria-label\": \"rows per page\",\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { columnConfig } from \"../../../constants/mocks/newsTableConfigConsts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreStateInterface } from \"../../../interfaces/storeStateInterface/storeStateInterface\";\nimport * as _ from \"lodash\";\nimport { getNews } from \"../../../store/news/news.action\";\nimport { newsTableLabels } from \"./newsTable.labels\";\nimport { CustomTable } from \"../../customTable/customTable\";\nimport Typography from \"../../typography/typography\";\n\nconst NewsTable = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getNews()(dispatch);\n  }, [dispatch]);\n\n  const newsList = useSelector(\n    (state: StoreStateInterface) => state?.news?.newsList ?? []\n  );\n  const isNewsListExist = !_.isEmpty(_.compact(newsList));\n\n  return (\n    <div>\n      {isNewsListExist ? (\n        <CustomTable rows={newsList} columns={columnConfig} />\n      ) : (\n        <Typography text={newsTableLabels.emptyList} />\n      )}\n    </div>\n  );\n};\n\nexport default NewsTable;\n","import React from \"react\";\r\nimport NewsTable from \"./newsTable/newsTable\";\r\nconst NewsPage = () => {\r\n  return (\r\n    <div>\r\n      <NewsTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","export const headerLabels = {\r\n  news: \"News\",\r\n  profile: \"Profile\",\r\n};\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\ninterface styledHeaderProps {\r\n  color: string;\r\n}\r\n\r\nconst styledHeader = makeStyles({\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    margin: `24px 0`,\r\n  },\r\n  headerItem: {\r\n    margin: `0 24px`,\r\n    color: (props: styledHeaderProps) => {return props?.color},\r\n    textDecoration: 'none',\r\n    borderBottom: '1px solid transparent',\r\n  },\r\n  headerItemActive: {\r\n     borderBottom: '1px solid black'\r\n  }\r\n});\r\n\r\nexport default styledHeader;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { headerLabels } from \"./header.labels\";\r\nimport styledHeader from \"./header.styles\";\r\nimport clsx from 'clsx';\r\n\r\nconst Header = () => {\r\n  const setActive = ({ isActive }: any) =>\r\n    isActive ? (clsx(headerStyled.headerItem, {[headerStyled.headerItemActive]: true})) : (headerStyled.headerItem);\r\n   const headerStyled = styledHeader({color: 'black'});\r\n\r\n  return (\r\n    <div className={headerStyled.header}>\r\n      <NavLink to=\"/\" className={setActive}>\r\n        {headerLabels.news}\r\n      </NavLink>\r\n      <NavLink to=\"/users-info\" className={setActive}>\r\n        {headerLabels.profile}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport NewsPage from \"../newsPage/newsPage\";\r\nimport Header from \"../header/header\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NewsPage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export const validationErrorShort = \"Too Short!\";\r\nexport const validationErrorLong = \"Too Long!\";\r\nexport const validationErrorRequired = \"Required\";\r\nexport const validationErrorInvalidFormat = \"Invalid format\";\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst styledButton = makeStyles({\r\n  button: {\r\n    textAlign: 'center',\r\n    boxShadow: 'none',\r\n    padding: `12px 24px`,\r\n    borderRadius: `16px`,\r\n    height: `48px`,\r\n    '& + button': {\r\n      marginLeft: `12px`\r\n    },\r\n    '&.MuiButton-contained': {\r\n      background: 'darkblue',\r\n      color: 'white',\r\n      borderRadius: `16px`,\r\n    },\r\n    '&.MuiButton-outlined': {\r\n      color: 'darkblue'\r\n    }\r\n  }\r\n});\r\n\r\nexport default styledButton;","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst styledSelectMenu = makeStyles({\r\n  selectMenu: {\r\n    height: `48px`,\r\n    marginBottom: `24px`\r\n  }\r\n});\r\n\r\nexport default styledSelectMenu;","import {makeStyles} from \"@mui/styles\";\r\n\r\ninterface styledValidationProps {\r\n  color: string;\r\n}\r\n\r\nconst styledValidation = makeStyles({\r\n  errorMessage: {\r\n    color: (props: styledValidationProps) => {\r\n      return props.color;},\r\n    marginBottom: `24px`,\r\n    textAlign: `left`,\r\n  }\r\n});\r\n\r\nexport default styledValidation;","import {makeStyles} from \"@mui/styles\";\r\n\r\nconst styledUserInfoFormDialog = makeStyles({\r\n  dialogWrapper: {\r\n      '& .MuiDialog-paper': {\r\n          background: `white`,\r\n          width: `100%`,\r\n          padding: `20px 30px`,\r\n          '& form': {\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n            justifyContent: `space-between`,\r\n            height: `100%`,\r\n            textAlign: `center`,\r\n          }\r\n      },\r\n  },\r\n  inputWrapper: {\r\n    width: `100%`,\r\n    marginBottom: `24px !important`,\r\n  }\r\n});\r\n\r\nexport default styledUserInfoFormDialog;","import React, { MutableRefObject, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { ErrorMessage, Field, Form, Formik, getIn } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  validationErrorInvalidFormat,\r\n  validationErrorLong,\r\n  validationErrorRequired,\r\n  validationErrorShort,\r\n} from \"../../../constants/validationConst\";\r\nimport { default_regexp } from \"../../../constants/appConsts\";\r\n// import { isPresent } from \"../../../helpers/helpers\";\r\nimport Typography from \"../../typography/typography\";\r\nimport styledButton from \"../../../styles/button.styles\";\r\nimport styledSelectMenu from \"../../../styles/selectMenu.styles\";\r\nimport styledValidation from \"../../../styles/validation.styles\";\r\nimport styledUserInfoFormDialog from \"./userInfoFormDialog.styles\";\r\nimport { isPresent } from \"../../../helpers/helpers\";\r\n\r\ninterface FormDialogPropsInterface {\r\n  isOpen?: boolean;\r\n  onSubmit: any;\r\n  onClose: any;\r\n  initValue?: any;\r\n  dialogTitle?: string;\r\n  options?: any;\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .matches(default_regexp, validationErrorInvalidFormat)\r\n    .required(validationErrorRequired),\r\n  surname: Yup.string()\r\n    .min(1, validationErrorShort)\r\n    .max(50, validationErrorLong)\r\n    .required(validationErrorRequired),\r\n});\r\n\r\n// const selectInitialOptions = [\r\n//   {\r\n//     name: \"Admin\",\r\n//     value: \"admin\",\r\n//   },\r\n//   {\r\n//     name: \"Editor\",\r\n//     value: \"editor\",\r\n//   },\r\n//   {\r\n//     name: \"User\",\r\n//     value: \"user\",\r\n//   },\r\n// ];\r\n\r\nexport const UserInfoFormDialog = (props: FormDialogPropsInterface) => {\r\n  const { isOpen, onSubmit, onClose, initValue, dialogTitle, options } = props;\r\n  const [role, setRole] = React.useState(\"\");\r\n  const [selectList, setSelectList] = React.useState();\r\n  const formikRef: MutableRefObject<any> = useRef();\r\n  const buttonStyled = styledButton();\r\n  const userInfoFormDialogStyled = styledUserInfoFormDialog();\r\n  const selectMenuStyled = styledSelectMenu();\r\n  const errorMessageStyled = styledValidation({ color: `#AF1D1DFF` });\r\n\r\n  useEffect(() => {\r\n    if (!isPresent(initValue) || !isPresent(options)) {\r\n      return;\r\n    }\r\n\r\n    createSelectOptions(options);\r\n    setRole(initValue?.role);\r\n  }, [initValue, options]);\r\n\r\n  const createSelectOptions = (value: any) => {\r\n    const optionList =\r\n      value &&\r\n      value.map((item: any) => {\r\n        return {\r\n          name: item,\r\n          value: item,\r\n        };\r\n      });\r\n    setSelectList(optionList);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  const isValid = (errors: any, controlName: string): boolean => {\r\n    return !!getIn(errors, controlName);\r\n  };\r\n\r\n  const sendForm = (formValues: any) => {\r\n    onSubmit(formValues);\r\n    formikRef.current.resetForm();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      className={userInfoFormDialogStyled.dialogWrapper}\r\n      onClose={handleClose}\r\n      open={isOpen || false}\r\n    >\r\n      <DialogTitle>\r\n        <Typography text={dialogTitle} />\r\n      </DialogTitle>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        initialValues={initValue}\r\n        validationSchema={validationSchema}\r\n        enableReinitialize={true}\r\n        onSubmit={(values) => {\r\n          sendForm(values);\r\n        }}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <Select\r\n              defaultValue={role}\r\n              value={role}\r\n              name=\"role\"\r\n              label=\"Role\"\r\n              className={selectMenuStyled.selectMenu}\r\n              onChange={(e) => {\r\n                setRole(e.target.value);\r\n                setFieldValue(e.target.name, e.target.value);\r\n              }}\r\n            >\r\n              (\r\n              {_.map(selectList, (option: any, index: number) => (\r\n                <MenuItem key={index} value={option.value}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <ErrorMessage\r\n              className={errorMessageStyled.errorMessage}\r\n              name=\"role\"\r\n              component=\"div\"\r\n            />\r\n            <Field type=\"text\" name=\"name\">\r\n              {({ field }: any) => (\r\n                <div>\r\n                  <TextField\r\n                    id=\"outlined-size-small\"\r\n                    className={userInfoFormDialogStyled.inputWrapper}\r\n                    label=\"Name\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={values && values.name}\r\n                    error={touched.name && isValid(errors, \"name\")}\r\n                    onChange={(event) =>\r\n                      setFieldValue(\"name\", event.target.value)\r\n                    }\r\n                    {...field}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Field>\r\n            <ErrorMessage\r\n              className={errorMessageStyled.errorMessage}\r\n              name=\"name\"\r\n              component=\"div\"\r\n            />\r\n            <Field type=\"text\" name=\"surname\">\r\n              {({ field }: any) => (\r\n                <div>\r\n                  <TextField\r\n                    id=\"outlined-size-small\"\r\n                    className={userInfoFormDialogStyled.inputWrapper}\r\n                    label=\"Surname\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={values && values.surname}\r\n                    error={touched.surname && isValid(errors, \"surname\")}\r\n                    onChange={(event) =>\r\n                      setFieldValue(\"surname\", event.target.value)\r\n                    }\r\n                    {...field}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Field>\r\n            <ErrorMessage\r\n              className={errorMessageStyled.errorMessage}\r\n              name=\"surname\"\r\n              component=\"div\"\r\n            />\r\n            <Button\r\n              className={buttonStyled.button}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {getFirestore} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCZPH0d_ZK0HC6htJauwG-PIpcZyVSLCXo\",\r\n  authDomain: \"newsbase-react.firebaseapp.com\",\r\n  projectId: \"newsbase-react\",\r\n  storageBucket: \"newsbase-react.appspot.com\",\r\n  messagingSenderId: \"536710551117\",\r\n  appId: \"1:536710551117:web:581226c9f482dfd2c8ee04\",\r\n  measurementId: \"G-NH1KX5W2TS\"\r\n};\r\n\r\nconst appFirebase = initializeApp(firebaseConfig);\r\n\r\nexport const dataBase = getFirestore(appFirebase);","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { UsersInfoInterface } from \"../../interfaces/usersInfoInterface/usersInfoInterface\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  addDoc,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport { dataBase } from \"../../firebase.config\";\r\n\r\nconst userRef = collection(dataBase, \"users\");\r\n\r\nexport const getUsersInfo: any = createAsyncThunk(\r\n  \"fetchGetUsersInfo\",\r\n  async () => {\r\n    const items = await getDocs(userRef);\r\n    const response = items.docs.map((item) => {\r\n      return {\r\n        ...item.data(),\r\n        id: item.id,\r\n      };\r\n    });\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const changeUsersInfo: any = createAsyncThunk(\r\n  \"fetchChangeUsersInfo\",\r\n  async (userInfo: any) => {\r\n    const userDoc = doc(dataBase, \"users\", userInfo.id);\r\n    await updateDoc(userDoc, userInfo);\r\n    return;\r\n  }\r\n);\r\n\r\nexport const deleteUserInfo: any = createAsyncThunk(\r\n  \"fetchDeleteUserInfo\",\r\n  async (id: string) => {\r\n    const userDoc = doc(dataBase, \"users\", id);\r\n    await deleteDoc(userDoc);\r\n    return;\r\n  }\r\n);\r\n\r\nexport const addUserInfo: any = createAsyncThunk(\r\n  \"fetchAddUserInfo\",\r\n  async (userInfo: UsersInfoInterface) => {\r\n    await addDoc(userRef, userInfo);\r\n    return;\r\n  }\r\n);\r\n","export const userInfoHeaderLabel = {\r\n  add: \"Add\",\r\n};\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nconst styledUserInfoHeader = makeStyles({\r\n  tableHeader: {\r\n    margin: `16px 0`\r\n  }\r\n});\r\n\r\nexport default styledUserInfoHeader;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { dataBase } from \"../../firebase.config\";\r\n\r\nconst userRef = collection(dataBase, \"roles\");\r\n\r\nexport const getRoles: any = createAsyncThunk(\r\n  \"admin/fetchGetNewsFast\",\r\n  async () => {\r\n    const items = await getDocs(userRef);\r\n    const response = items.docs.map((item) => {\r\n      return {\r\n        ...item.data(),\r\n      };\r\n    })[0]?.rolesList;\r\n    return response;\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { UserInfoFormDialog } from \"../userInfoFormDialog/userInfoFormDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UsersInfoInterface } from \"../../../interfaces/usersInfoInterface/usersInfoInterface\";\r\nimport { userInfoInitial } from \"../../../constants/appConsts\";\r\nimport {\r\n  addUserInfo,\r\n  getUsersInfo,\r\n} from \"../../../store/userInfo/userInfo.actions\";\r\nimport { userInfoHeaderLabel } from \"./userInfoHeader.label\";\r\nimport styledButton from \"../../../styles/button.styles\";\r\nimport styledUserInfoHeader from \"./userInfoHeader.styles\";\r\nimport { getRoles } from \"../../../store/roles/roles.actions\";\r\nimport { StoreStateInterface } from \"../../../interfaces/storeStateInterface/storeStateInterface\";\r\n\r\nexport const UserInfoHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const buttonStyled = styledButton();\r\n  const userInfoHeaderStyled = styledUserInfoHeader();\r\n  const [statusDialog, setStatusDialog] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const handleOpenDialog = () => {\r\n    setStatusDialog(true);\r\n    setDialogTitle(\"Add\");\r\n    getRoles()(dispatch);\r\n  };\r\n\r\n  const rolesList = useSelector(\r\n    (state: StoreStateInterface) => state?.roles?.rolesList ?? []\r\n  );\r\n\r\n  const handleSubmit = (formValues: UsersInfoInterface) => {\r\n    addUserInfo(formValues)(dispatch);\r\n    getUsersInfo()(dispatch);\r\n  };\r\n\r\n  const handleClose = (flag: boolean) => {\r\n    setStatusDialog(flag);\r\n  };\r\n\r\n  return (\r\n    <div className={userInfoHeaderStyled.tableHeader}>\r\n      <Button\r\n        variant=\"contained\"\r\n        className={buttonStyled.button}\r\n        onClick={handleOpenDialog}\r\n      >\r\n        {userInfoHeaderLabel.add}\r\n      </Button>\r\n      {!!userInfoInitial ? (\r\n        <UserInfoFormDialog\r\n          isOpen={statusDialog}\r\n          onSubmit={handleSubmit}\r\n          onClose={handleClose}\r\n          options={rolesList}\r\n          initValue={userInfoInitial}\r\n          dialogTitle={dialogTitle}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const editBlockLabels = {\r\n  edit: \"Edit\",\r\n  delete: \"Delete\",\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { editBlockLabels } from \"./editBlock.labels\";\r\nimport styledButton from \"../../styles/button.styles\";\r\n\r\ninterface EditBlockPropsInterface {\r\n  primaryEvent?: any;\r\n  secondaryEvent?: any;\r\n}\r\n\r\nexport const EditBlock = (props: EditBlockPropsInterface) => {\r\n  const { primaryEvent, secondaryEvent } = props;\r\n  const editButtonStyle = styledButton();\r\n  const primaryClick = () => {\r\n    primaryEvent();\r\n  };\r\n  const secondaryClick = () => {\r\n    secondaryEvent();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {primaryEvent ? (\r\n        <Button\r\n          className={editButtonStyle.button}\r\n          variant=\"contained\"\r\n          onClick={primaryClick}\r\n        >\r\n          {editBlockLabels.edit}\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {secondaryEvent ? (\r\n        <Button\r\n          className={editButtonStyle.button}\r\n          variant=\"outlined\"\r\n          onClick={secondaryClick}\r\n        >\r\n          {editBlockLabels.delete}\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const userInfoListLabels = {\r\n  emptyList: \"No users\",\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@mui/material\";\r\nimport * as _ from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreStateInterface } from \"../../../interfaces/storeStateInterface/storeStateInterface\";\r\nimport { EditBlock } from \"../../editBlock/editBlock\";\r\nimport { UserInfoFormDialog } from \"../userInfoFormDialog/userInfoFormDialog\";\r\nimport { UsersInfoInterface } from \"../../../interfaces/usersInfoInterface/usersInfoInterface\";\r\nimport { userInfoInitial } from \"../../../constants/appConsts\";\r\nimport {\r\n  changeUsersInfo,\r\n  deleteUserInfo,\r\n  getUsersInfo,\r\n} from \"../../../store/userInfo/userInfo.actions\";\r\nimport { userInfoListLabels } from \"./userInfoList.labels\";\r\nimport Typography from \"../../typography/typography\";\r\nimport { getRoles } from \"../../../store/roles/roles.actions\";\r\n\r\nexport const UserInfoList = () => {\r\n  const dispatch = useDispatch();\r\n  const [statusDialog, setStatusDialog] = useState(false);\r\n  const [editableUser, setEditableUser] = useState(userInfoInitial);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getUsersInfo()(dispatch);\r\n  }, [dispatch]);\r\n  const userInfoList = useSelector(\r\n    (state: StoreStateInterface) => state?.users?.usersList\r\n  );\r\n\r\n  const isExistUserInfoList = _.size(userInfoList) > 0;\r\n\r\n  const handleEdit = (formValues: UsersInfoInterface) => {\r\n    changeUsersInfo(formValues)(dispatch);\r\n    getUsersInfo()(dispatch);\r\n  };\r\n\r\n  const handleClose = (flag: boolean) => {\r\n    setStatusDialog(flag);\r\n  };\r\n\r\n  const editUserItem = (id: string) => {\r\n    setEditableUser(_.find(userInfoList, { id: id }) as UsersInfoInterface);\r\n    setStatusDialog(true);\r\n    setDialogTitle(\"Edit\");\r\n    getRoles()(dispatch);\r\n  };\r\n\r\n  const rolesList = useSelector(\r\n    (state: StoreStateInterface) => state?.roles?.rolesList\r\n  );\r\n\r\n  const deleteUserItem = (id: string): void => {\r\n    deleteUserInfo(id)(dispatch);\r\n    getUsersInfo()(dispatch);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isExistUserInfoList ? (\r\n        <List>\r\n          {_.map(\r\n            userInfoList,\r\n            (userInfoItem: UsersInfoInterface, index: number) => (\r\n              <ListItem key={index}>\r\n                <ListItemText>{userInfoItem.name}</ListItemText>\r\n                <ListItemText>{userInfoItem.surname}</ListItemText>\r\n                <ListItemText>{userInfoItem.role}</ListItemText>\r\n                <EditBlock\r\n                  primaryEvent={() => {\r\n                    editUserItem(userInfoItem.id);\r\n                  }}\r\n                  secondaryEvent={() => {\r\n                    deleteUserItem(userInfoItem.id);\r\n                  }}\r\n                />\r\n              </ListItem>\r\n            )\r\n          )}\r\n        </List>\r\n      ) : (\r\n        <Typography text={userInfoListLabels.emptyList} />\r\n      )}\r\n      {!!editableUser ? (\r\n        <UserInfoFormDialog\r\n          isOpen={statusDialog}\r\n          onSubmit={handleEdit}\r\n          onClose={handleClose}\r\n          initValue={editableUser}\r\n          options={rolesList}\r\n          dialogTitle={dialogTitle}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { UserInfoHeader } from \"./userInfoHeader/userInfoHeader\";\r\nimport { UserInfoList } from \"./userInfoList/userInfoList\";\r\nimport Header from \"../header/header\";\r\n\r\nexport const UsersInfo = () => {\r\n  localStorage.setItem(\r\n    \"userInfoList\",\r\n    JSON.stringify([\r\n      {\r\n        id: 1,\r\n        name: \"Adam\",\r\n        surname: \"Qwerty\",\r\n        role: \"user\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Tomas\",\r\n        surname: \"ASDFG\",\r\n        role: \"admin\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Nick\",\r\n        surname: \"Cvnnvb\",\r\n        role: \"user\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Jack\",\r\n        surname: \"Qwerty\",\r\n        role: \"editor\",\r\n      },\r\n    ])\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <UserInfoHeader />\r\n      <UserInfoList />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Dashboard from \"../dashboard/dashboard\";\r\nimport { UsersInfo } from \"../usersInfo/usersInfo\";\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Dashboard />} />\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          <Route path=\"/users-info\" element={<UsersInfo />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Routing from \"./components/routing/routing\";\r\nimport 'firebase/firestore';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Routing />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  init: true,\r\n};\r\n\r\nexport default initialState;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport initialState from \"../initialState\";\r\nimport {addUserInfo, changeUsersInfo, deleteUserInfo, getUsersInfo} from \"./userInfo.actions\";\r\n\r\nexport const reducerName = \"userInfoReducer\";\r\n\r\nconst userInfoSlice = createSlice({\r\n  name: reducerName,\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getUsersInfo.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUsersLoading: true,\r\n      };\r\n    },\r\n    [getUsersInfo.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        usersList: action.payload,\r\n        isUsersLoading: false,\r\n      };\r\n    },\r\n    [getUsersInfo.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUsersLoading: false,\r\n      };\r\n    },\r\n    [changeUsersInfo.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUsersChanging: true,\r\n      };\r\n    },\r\n    [changeUsersInfo.fulfilled]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUsersChanging: false,\r\n      };\r\n    },\r\n    [changeUsersInfo.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUsersChanging: false,\r\n      };\r\n    },\r\n    [addUserInfo.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserInfoAdding: true,\r\n      };\r\n    },\r\n    [addUserInfo.fulfilled]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserInfoAdding: false,\r\n      };\r\n    },\r\n    [addUserInfo.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserInfoAdding: false,\r\n      };\r\n    },\r\n    [deleteUserInfo.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserDeleting: true,\r\n      };\r\n    },\r\n    [deleteUserInfo.fulfilled]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserDeleting: false,\r\n      };\r\n    },\r\n    [deleteUserInfo.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserDeleting: false,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default userInfoSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport initialState from \"../initialState\";\r\nimport { getNews } from \"./news.action\";\r\n\r\nconst reducerName = \"newsReducer\";\r\n\r\nconst newsSlice = createSlice({\r\n  name: reducerName,\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getNews.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        isNewsLoading: true,\r\n      };\r\n    },\r\n    [getNews.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        newsList: action.payload.items,\r\n        isNewsLoading: false,\r\n      };\r\n    },\r\n    [getNews.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        isNewsLoading: false,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default newsSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport initialState from \"../initialState\";\r\nimport { getRoles } from \"./roles.actions\";\r\n\r\nconst reducerName = \"rolesReducer\";\r\n\r\nconst rolesSlice = createSlice({\r\n  name: reducerName,\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getRoles.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        isRolesLoading: true,\r\n      };\r\n    },\r\n    [getRoles.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        rolesList: action.payload,\r\n        isRolesLoading: false,\r\n      };\r\n    },\r\n    [getRoles.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        isRolesLoading: false,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default rolesSlice.reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userInfoReducer from \"./userInfo/userInfo.reducer\";\r\nimport newsReducer from \"./news/news.reducer\";\r\nimport rolesReducer from \"./roles/roles.reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  users: userInfoReducer,\r\n  news: newsReducer,\r\n  roles: rolesReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App></App>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}